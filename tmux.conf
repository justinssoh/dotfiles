#
# ~/.tmux.conf
#
#    https://github.com/colbycheeze/dotfiles
#

#######################
##                   ##
##  GENERAL SETTING  ##
##                   ##
#######################
# improve colors
set -g default-terminal 'screen-256color'


# Reload config
bind-key r source-file ~/.tmux.conf \; display-message "~/.tmux.conf reloaded"

# start window numbers at 1 to match keyboard order with tmux window order
set -g base-index 1
set-window-option -g pane-base-index 1

# renumber windows sequentially after closing any of them
set -g renumber-windows on

# increase scrollback lines
set -g history-limit 10000



#######################
##                   ##
##    KEY BINDING    ##
##                   ##
#######################

# ==> act like GNU screen
#       <Leader> : Ctrl + a
#
#unbind C-b
#set -g prefix C-a


# SESSION
#
bind-key ` new-session -s work


# WINDOW
#
bind-key c new-window -c '#{pane_current_path}'
bind-key k confirm kill-window
bind-key K run-shell 'tmux switch-client -n \; kill-session -t "$(tmux display-message -p "#S")" || tmux kill-session'

# ==> Split Window
# 
bind-key h split-window -v -c '#{pane_current_path}'
bind-key v split-window -h -c '#{pane_current_path}'
# ==> Quickly edit todo list
#
bind-key t split-window -h "vim"


# PANE
# ==> Move(Select) between Panes 
#       Ctrl + <h j k l >
#       Ctrl + Arrows
#
setw -g mode-keys vi
#bind h select-pane -L
#bind j select-pane -D
#bind k select-pane -U
#bind l select-pane -R
bind-key -r C-h select-window -t :-
bind-key -r C-l select-window -t :+
# switch to last pane
#bind-key C-a last-pane


# ==> Resize Pane
#       Shift + Arrows to resize pane
#
bind -n S-Left resize-pane -L 2
bind -n S-Right resize-pane -R 2
bind -n S-Down resize-pane -D 1
bind -n S-Up resize-pane -U 1



#######################
##                   ##
##     VIM Style     ##
##                   ##
#######################
# smart pane switching with awareness of vim splits
is_vim='echo "#{pane_current_command}" | grep -iqE "(^|\/)g?(view|n?vim?)(diff)?$"'
bind -n C-h if-shell "$is_vim" "send-keys C-h" "select-pane -L"
bind -n C-j if-shell "$is_vim" "send-keys C-j" "select-pane -D"
bind -n C-k if-shell "$is_vim" "send-keys C-k" "select-pane -U"
bind -n C-l if-shell "$is_vim" "send-keys C-l" "select-pane -R"
bind -n C-\ if-shell "$is_vim" "send-keys C-\\" "select-pane -l"

bind-key -T edit-mode-vi Up send-keys -X history-up
bind-key -T edit-mode-vi Down send-keys -X history-down
unbind-key -T copy-mode-vi Space     ;   bind-key -T copy-mode-vi v send-keys -X begin-selection
#unbind-key -T copy-mode-vi Enter     ;   bind-key -T copy-mode-vi y send-keys -X copy-pipe-and-cancel "reattach-to-user-namespace pbcopy"
unbind-key -T copy-mode-vi Enter     ;   bind-key -T copy-mode-vi y send-keys -X copy-pipe-and-cancel "xclip -sel clip -i"
unbind-key -T copy-mode-vi C-v       ;   bind-key -T copy-mode-vi C-v send-keys -X rectangle-toggle
unbind-key -T copy-mode-vi [         ;   bind-key -T copy-mode-vi [ send-keys -X begin-selection
unbind-key -T copy-mode-vi ]         ;   bind-key -T copy-mode-vi ] send-keys -X copy-selection


#######################
##                   ##
## Clipboard : xclip ##
##                   ##
#######################
#bind -t vi-copy y copy-pipe "xclip -sel clip -i"


#######################
##                   ##
##     STATUS BAR    ##
##                   ##
#######################
# Status Bar 
set -g status on

# soften status bar colors
#set -g status-bg '#586e75'
#set -g status-fg '#eee8d5'

# More colors from Solarized
# $base03:    #002b36;
# $base02:    #073642;
# $base01:    #586e75;
# $base00:    #657b83;
# $base0:     #839496;
# $base1:     #93a1a1;
# $base2:     #eee8d5;
# $base3:     #fdf6e3;
# $yellow:    #b58900;
# $orange:    #cb4b16;
# $red:       #dc322f;
# $magenta:   #d33682;
# $violet:    #6c71c4;
# $blue:      #268bd2;
# $cyan:      #2aa198;
# $green:     #859900;

# remove administrative debris (session name, hostname, time) in status bar
#set -g status-left ''
#set -g status-right ''
#
#set -g status-justify centre
#set-option -g status-left-length 50
#set-option -g status-right "Battery: #{battery_icon} #{battery_percentage} #{battery_remain} | #(date '+%a, %b %d - %I:%M')"
#set -g status-left "Session: #S"



#######################
##                   ##
##       MOUSE       ##
##                   ##
#######################
# Allow mouse usage and copy pasting behavior (Compat with Tmux 2.4+)
set -g mouse on
bind-key -T copy-mode-vi WheelUpPane send-keys -X scroll-up
bind-key -T copy-mode-vi WheelDownPane send-keys -X scroll-down
unbind -T copy-mode-vi MouseDragEnd1Pane



#######################
##                   ##
##      PLUG-INs     ##
##                   ##
#######################
# How to install other plugins from Github:
#   Install      : prefix + I
#   Update       : prefix + U
#   Uninstall    : prefix + <Alt> + u
#
# set -g @plugin 'github_username/plugin_name'
# set -g @plugin 'git@github.com/user/plugin'
# set -g @plugin 'git@bitbucket.com/user/plugin'


# ==> List of plugins
#
set -g @plugin 'tmux-plugins/tpm'                     # Tmux package manager
set -g @plugin 'tmux-plugins/tmux-sensible'
set -g @plugin 'tmux-plugins/tmux-open'               # Open highlighted selection directly from Tmux
#set -g @plugin 'tmux-plugins/tmux-resurrect'         # Restore previous sessions on reboot
#set -g @plugin 'tmux-plugins/tmux-continuum'         # Restore previous sessions on reboot
#set -g @plugin 'tmux-plugins/tmux-battery'           # Show battery icon/status
#set -g @plugin 'tmux-plugins/tmux-themepack'          # Load Tmux Theme Pack

source-file "${HOME}/.tmux/tmux-themepack/powerline/default/blue.tmuxtheme"

# ==> Tmux will auto-start on system boot
#
#set -g @continuum-boot 'on'
#set -g @continuum-boot-options 'iterm'
#set -g @continuum-restore 'on'
#set -g @continuum-save-interval '5'
#set -g @resurrect-strategy-vim 'session'
#set -g @resurrect-strategy-nvim 'session' #for Neo Vim
#set -g @themepack 'powerline/default/blue'

# Load theme pack manually
#source-file "${HOME}/.tmux/tmux-themepack/powerline/default/blue.tmuxtheme"
#source-file ${HOME}/.tmux/tmux-themepack/powerline/default/blue.tmuxtheme

# ==> Initializes Tmux plugin manager.
#      Keep this line at the very bottom of tmux.conf.
#
#* Install Plugins
#    - 1. Add new plugin to ~/.tmux.conf with set -g @plugin '...'
#    - 2. Press <prefix> + I(capital i, as in Install) to fetch the plugin
#
#* Uninstall Plugins
#    - 1. Remove (or comment out) plugin from the list
#    - 2. Press <prefix> + <alt> + u(lowercase u as in uninstall) to remove the plugin
run-shell '~/.tmux/tmux-plugins/tpm/tpm'
